DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-03 04:11:21,304: INFO/MainProcess] beat: Starting...
[2024-06-03 04:12:06,423: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-06-03 04:12:06,435: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-03 04:12:16,480: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-06-03 04:12:16,500: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-03 04:19:36,857: INFO/MainProcess] beat: Starting...
[2024-06-03 04:20:16,984: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-06-03 04:20:16,998: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-03 04:23:14,109: INFO/MainProcess] beat: Starting...
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-03 04:26:09,318: INFO/MainProcess] beat: Starting...
[2024-06-03 04:26:44,423: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-06-03 04:26:44,437: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-03 04:28:24,605: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-06-03 04:28:24,635: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-03 04:28:39,660: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-06-03 04:28:39,681: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-03 04:32:16,496: INFO/MainProcess] beat: Starting...
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-03 04:41:34,855: INFO/MainProcess] beat: Starting...
[2024-06-03 04:41:34,915: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-03 04:42:10,014: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-06-03 04:42:10,024: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-03 04:42:20,044: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-06-03 04:42:20,064: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-03 04:42:50,109: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-06-03 04:42:50,128: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-03 08:08:30,574: INFO/MainProcess] beat: Starting...
[2024-06-03 08:08:30,634: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-03 08:08:30,674: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-03 08:08:30,678: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-03 08:08:30,682: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-04 02:30:25,248: INFO/MainProcess] beat: Starting...
[2024-06-04 02:30:25,307: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-04 02:30:25,347: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-04 02:30:25,351: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-04 02:30:25,357: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-04 03:43:58,087: INFO/MainProcess] beat: Starting...
[2024-06-04 03:43:58,146: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-04 03:43:58,185: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-04 03:43:58,189: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-04 03:43:58,192: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-06-04 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-05 01:44:45,652: INFO/MainProcess] beat: Starting...
[2024-06-05 01:44:45,718: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-05 01:44:45,757: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-05 01:44:45,761: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-05 01:44:45,765: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-05 01:50:05,225: INFO/MainProcess] beat: Starting...
[2024-06-05 01:50:05,295: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-05 01:50:05,338: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-05 01:50:05,342: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-05 01:50:05,345: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-05 02:30:24,906: INFO/MainProcess] beat: Starting...
[2024-06-05 02:30:24,968: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-05 02:30:25,007: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-05 02:30:25,011: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-05 02:30:25,014: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-06-05 04:00:00,002: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-05 05:11:14,494: INFO/MainProcess] beat: Starting...
[2024-06-05 05:11:14,572: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-05 05:11:14,613: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-05 05:11:14,617: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-05 05:11:14,620: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-05 05:13:29,515: INFO/MainProcess] beat: Starting...
[2024-06-05 05:13:29,577: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-05 05:13:29,619: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-05 05:13:29,623: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-05 05:13:29,626: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-05 11:39:03,684: INFO/MainProcess] beat: Starting...
[2024-06-05 11:39:03,747: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-05 11:39:03,787: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-05 11:39:03,791: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-05 11:39:03,794: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-06 02:30:25,473: INFO/MainProcess] beat: Starting...
[2024-06-06 02:30:25,534: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-06 02:30:25,575: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-06 02:30:25,579: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-06 02:30:25,583: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-06-06 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 02:30:25,356: INFO/MainProcess] beat: Starting...
[2024-06-11 02:30:25,422: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 02:30:25,470: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 02:30:25,473: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 02:30:25,477: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-06-11 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-06-11 04:59:41,591: INFO/MainProcess] beat: Starting...
[2024-06-11 04:59:41,650: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 04:59:41,693: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 04:59:41,697: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 04:59:41,701: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:00:43,261: INFO/MainProcess] beat: Starting...
[2024-06-11 05:00:43,330: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:00:43,373: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:00:43,377: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:00:43,380: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-06-11 05:01:59,338: INFO/MainProcess] beat: Starting...
[2024-06-11 05:01:59,397: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:01:59,438: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:01:59,441: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:01:59,445: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:02:55,455: INFO/MainProcess] beat: Starting...
[2024-06-11 05:02:55,521: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:02:55,582: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:02:55,586: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:02:55,589: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:03:51,349: INFO/MainProcess] beat: Starting...
[2024-06-11 05:03:51,409: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:03:51,450: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:03:51,453: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:03:51,456: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:08:45,975: INFO/MainProcess] beat: Starting...
[2024-06-11 05:08:46,055: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:08:46,099: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:08:46,103: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:08:46,106: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:14:34,996: INFO/MainProcess] beat: Starting...
[2024-06-11 05:14:35,064: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:14:35,104: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:14:35,107: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:14:35,111: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:15:13,798: INFO/MainProcess] beat: Starting...
[2024-06-11 05:15:13,859: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:15:13,903: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:15:13,911: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:15:13,915: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:16:28,147: INFO/MainProcess] beat: Starting...
[2024-06-11 05:16:28,206: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:16:28,246: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:16:28,250: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:16:28,253: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:17:31,298: INFO/MainProcess] beat: Starting...
[2024-06-11 05:17:31,356: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:17:31,396: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:17:31,400: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:17:31,403: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:19:35,673: INFO/MainProcess] beat: Starting...
[2024-06-11 05:19:35,734: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:19:35,775: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:19:35,778: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:19:35,782: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-06-11 05:21:35,849: INFO/MainProcess] beat: Starting...
[2024-06-11 05:21:35,924: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:21:35,964: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:21:35,968: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:21:35,971: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:23:57,534: INFO/MainProcess] beat: Starting...
[2024-06-11 05:23:57,609: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:23:57,651: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:23:57,655: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:23:57,659: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:25:29,264: INFO/MainProcess] beat: Starting...
[2024-06-11 05:25:29,326: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:25:29,368: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:25:29,373: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:25:29,376: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:39:41,165: INFO/MainProcess] beat: Starting...
[2024-06-11 05:39:41,224: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:39:41,265: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:39:41,268: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:39:41,272: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:40:50,055: INFO/MainProcess] beat: Starting...
[2024-06-11 05:40:50,137: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:40:50,180: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:40:50,183: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:40:50,187: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:43:43,116: INFO/MainProcess] beat: Starting...
[2024-06-11 05:43:43,179: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:43:43,222: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:43:43,225: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:43:43,228: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:44:49,469: INFO/MainProcess] beat: Starting...
[2024-06-11 05:44:49,532: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:44:49,587: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:44:49,595: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:44:49,599: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:45:17,228: INFO/MainProcess] beat: Starting...
[2024-06-11 05:45:17,296: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:45:17,340: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:45:17,344: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:45:17,348: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:47:24,530: INFO/MainProcess] beat: Starting...
[2024-06-11 05:47:24,592: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:47:24,634: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:47:24,637: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:47:24,641: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:48:36,089: INFO/MainProcess] beat: Starting...
[2024-06-11 05:48:36,155: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:48:36,202: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:48:36,206: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:48:36,210: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 05:55:53,003: INFO/MainProcess] beat: Starting...
[2024-06-11 05:55:53,064: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 05:55:53,106: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 05:55:53,109: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 05:55:53,113: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 06:00:07,761: INFO/MainProcess] beat: Starting...
[2024-06-11 06:00:07,822: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 06:00:07,866: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 06:00:07,870: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 06:00:07,874: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 06:19:21,943: INFO/MainProcess] beat: Starting...
[2024-06-11 06:19:22,016: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 06:19:22,061: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 06:19:22,065: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 06:19:22,068: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 08:49:39,083: INFO/MainProcess] beat: Starting...
[2024-06-11 08:49:39,142: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 08:49:39,184: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 08:49:39,188: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 08:49:39,192: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 08:52:47,038: INFO/MainProcess] beat: Starting...
[2024-06-11 08:52:47,100: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 08:52:47,141: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 08:52:47,145: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 08:52:47,149: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 09:02:24,633: INFO/MainProcess] beat: Starting...
[2024-06-11 09:02:24,701: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 09:02:24,743: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 09:02:24,747: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 09:02:24,750: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-06-11 09:04:47,508: INFO/MainProcess] beat: Starting...
[2024-06-11 09:04:47,570: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 09:04:47,612: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 09:04:47,616: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 09:04:47,620: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-06-11 09:06:50,329: INFO/MainProcess] beat: Starting...
[2024-06-11 09:06:50,402: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 09:06:50,445: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 09:06:50,449: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 09:06:50,453: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 09:08:36,396: INFO/MainProcess] beat: Starting...
[2024-06-11 09:08:36,457: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 09:08:36,497: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 09:08:36,501: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 09:08:36,504: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 09:09:43,333: INFO/MainProcess] beat: Starting...
[2024-06-11 09:09:43,397: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 09:09:43,439: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 09:09:43,443: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 09:09:43,446: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 09:10:48,678: INFO/MainProcess] beat: Starting...
[2024-06-11 09:10:48,741: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 09:10:48,783: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 09:10:48,787: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 09:10:48,790: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-06-11 09:14:51,274: INFO/MainProcess] beat: Starting...
[2024-06-11 09:14:51,335: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 09:14:51,377: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 09:14:51,381: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 09:14:51,385: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 09:23:25,033: INFO/MainProcess] beat: Starting...
[2024-06-11 09:23:25,092: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 09:23:25,133: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 09:23:25,137: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 09:23:25,140: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 09:26:47,783: INFO/MainProcess] beat: Starting...
[2024-06-11 09:26:47,842: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 09:26:47,883: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 09:26:47,886: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 09:26:47,889: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 09:36:52,922: INFO/MainProcess] beat: Starting...
[2024-06-11 09:36:52,982: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 09:36:53,024: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 09:36:53,028: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 09:36:53,031: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 09:42:44,114: INFO/MainProcess] beat: Starting...
[2024-06-11 09:42:44,175: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 09:42:44,215: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 09:42:44,219: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 09:42:44,223: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 09:54:13,516: INFO/MainProcess] beat: Starting...
[2024-06-11 09:54:13,577: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 09:54:13,618: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 09:54:13,621: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 09:54:13,625: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 10:02:57,263: INFO/MainProcess] beat: Starting...
[2024-06-11 10:02:57,333: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 10:02:57,376: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 10:02:57,380: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 10:02:57,383: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 10:07:47,945: INFO/MainProcess] beat: Starting...
[2024-06-11 10:07:48,010: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 10:07:48,051: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 10:07:48,054: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 10:07:48,057: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 10:11:39,187: INFO/MainProcess] beat: Starting...
[2024-06-11 10:11:39,247: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 10:11:39,289: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 10:11:39,293: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 10:11:39,296: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 10:58:49,402: INFO/MainProcess] beat: Starting...
[2024-06-11 10:58:49,463: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 10:58:49,503: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 10:58:49,507: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 10:58:49,510: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 11:17:59,224: INFO/MainProcess] beat: Starting...
[2024-06-11 11:17:59,284: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 11:17:59,324: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 11:17:59,327: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 11:17:59,330: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 11:36:04,123: INFO/MainProcess] beat: Starting...
[2024-06-11 11:36:04,184: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 11:36:04,225: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 11:36:04,229: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 11:36:04,232: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 11:42:34,648: INFO/MainProcess] beat: Starting...
[2024-06-11 11:42:34,714: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 11:42:34,756: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 11:42:34,760: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 11:42:34,763: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 12:38:33,720: INFO/MainProcess] beat: Starting...
[2024-06-11 12:38:33,781: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 12:38:33,822: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 12:38:33,825: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 12:38:33,829: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 12:54:27,961: INFO/MainProcess] beat: Starting...
[2024-06-11 12:54:28,022: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 12:54:28,063: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 12:54:28,067: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 12:54:28,071: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 12:55:39,614: INFO/MainProcess] beat: Starting...
[2024-06-11 12:55:39,674: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 12:55:39,716: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 12:55:39,720: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 12:55:39,724: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 12:58:00,507: INFO/MainProcess] beat: Starting...
[2024-06-11 12:58:00,571: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 12:58:00,612: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 12:58:00,616: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 12:58:00,620: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 13:05:54,491: INFO/MainProcess] beat: Starting...
[2024-06-11 13:05:54,554: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 13:05:54,601: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 13:05:54,604: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 13:05:54,608: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 13:12:58,669: INFO/MainProcess] beat: Starting...
[2024-06-11 13:12:58,731: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 13:12:58,772: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 13:12:58,776: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 13:12:58,779: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 13:19:39,244: INFO/MainProcess] beat: Starting...
[2024-06-11 13:19:39,305: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 13:19:39,347: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 13:19:39,350: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 13:19:39,354: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 13:27:47,820: INFO/MainProcess] beat: Starting...
[2024-06-11 13:27:47,898: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 13:27:47,942: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 13:27:47,946: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 13:27:47,949: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 13:32:06,534: INFO/MainProcess] beat: Starting...
[2024-06-11 13:32:06,597: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 13:32:06,640: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 13:32:06,644: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 13:32:06,647: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 13:39:53,489: INFO/MainProcess] beat: Starting...
[2024-06-11 13:39:53,550: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 13:39:53,590: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 13:39:53,594: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 13:39:53,598: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 13:43:16,859: INFO/MainProcess] beat: Starting...
[2024-06-11 13:43:16,922: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 13:43:16,965: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 13:43:16,968: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 13:43:16,972: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 13:48:24,742: INFO/MainProcess] beat: Starting...
[2024-06-11 13:48:24,803: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 13:48:24,843: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 13:48:24,847: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 13:48:24,851: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 13:56:18,075: INFO/MainProcess] beat: Starting...
[2024-06-11 13:56:18,138: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 13:56:18,180: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 13:56:18,184: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 13:56:18,187: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 14:04:05,210: INFO/MainProcess] beat: Starting...
[2024-06-11 14:04:05,272: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 14:04:05,314: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 14:04:05,318: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 14:04:05,321: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 14:14:18,207: INFO/MainProcess] beat: Starting...
[2024-06-11 14:14:18,269: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 14:14:18,309: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 14:14:18,312: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 14:14:18,316: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 14:24:42,967: INFO/MainProcess] beat: Starting...
[2024-06-11 14:24:43,042: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 14:24:43,083: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 14:24:43,087: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 14:24:43,091: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 14:31:16,509: INFO/MainProcess] beat: Starting...
[2024-06-11 14:31:16,578: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 14:31:16,619: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 14:31:16,622: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 14:31:16,626: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 14:39:03,166: INFO/MainProcess] beat: Starting...
[2024-06-11 14:39:03,230: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 14:39:03,274: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 14:39:03,278: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 14:39:03,281: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 15:00:47,494: INFO/MainProcess] beat: Starting...
[2024-06-11 15:00:47,562: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 15:00:47,605: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 15:00:47,609: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 15:00:47,612: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-11 15:13:42,379: INFO/MainProcess] beat: Starting...
[2024-06-11 15:13:42,441: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 15:13:42,481: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 15:13:42,485: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 15:13:42,489: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-11 16:28:32,440: INFO/MainProcess] beat: Starting...
[2024-06-11 16:28:32,504: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-11 16:28:32,549: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-11 16:28:32,552: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-11 16:28:32,556: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-12 02:30:24,718: INFO/MainProcess] beat: Starting...
[2024-06-12 02:30:24,781: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-12 02:30:24,836: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-12 02:30:24,840: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-12 02:30:24,844: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-06-12 04:00:00,002: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-20 17:42:55,183: INFO/MainProcess] beat: Starting...
[2024-06-20 17:42:55,246: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-20 17:42:55,296: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-20 17:42:55,301: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-20 17:42:55,304: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-20 17:46:16,022: INFO/MainProcess] beat: Starting...
[2024-06-20 17:46:16,083: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-20 17:46:16,158: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-20 17:46:16,163: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-20 17:46:16,167: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-20 17:47:07,738: INFO/MainProcess] beat: Starting...
[2024-06-20 17:47:07,817: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-20 17:47:07,857: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-20 17:47:07,862: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-20 17:47:07,865: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-06-28 21:38:12,557: INFO/MainProcess] beat: Starting...
[2024-06-28 21:38:12,610: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-28 21:38:12,660: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-28 21:38:12,663: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-28 21:38:12,665: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-28 21:40:45,586: INFO/MainProcess] beat: Starting...
[2024-06-28 21:40:45,643: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-28 21:40:45,686: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-28 21:40:45,689: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-28 21:40:45,691: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-29 02:30:24,404: INFO/MainProcess] beat: Starting...
[2024-06-29 02:30:24,469: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-29 02:30:24,509: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-29 02:30:24,512: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-29 02:30:24,514: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
celery beat v5.3.6 (emerald-rush) is starting.
__    -    ... __   -        _
LocalTime -> 2024-06-29 02:30:24
Configuration ->
    . broker -> redis://localhost:6379/0
    . loader -> celery.loaders.app.AppLoader
    . scheduler -> django_celery_beat.schedulers.DatabaseScheduler

    . logfile -> [stderr]@%INFO
    . maxinterval -> 5.00 seconds (5s)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-29 03:53:02,648: INFO/MainProcess] beat: Starting...
[2024-06-29 03:53:02,713: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-29 03:53:02,754: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-29 03:53:02,757: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-29 03:53:02,759: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
celery beat v5.3.6 (emerald-rush) is starting.
__    -    ... __   -        _
LocalTime -> 2024-06-29 03:53:02
Configuration ->
    . broker -> redis://localhost:6379/0
    . loader -> celery.loaders.app.AppLoader
    . scheduler -> django_celery_beat.schedulers.DatabaseScheduler

    . logfile -> [stderr]@%INFO
    . maxinterval -> 5.00 seconds (5s)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-29 03:59:31,031: INFO/MainProcess] beat: Starting...
[2024-06-29 03:59:31,110: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-29 03:59:31,151: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-29 03:59:31,153: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-29 03:59:31,156: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-06-29 04:00:00,004: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
celery beat v5.3.6 (emerald-rush) is starting.
__    -    ... __   -        _
LocalTime -> 2024-06-29 03:59:31
Configuration ->
    . broker -> redis://localhost:6379/0
    . loader -> celery.loaders.app.AppLoader
    . scheduler -> django_celery_beat.schedulers.DatabaseScheduler

    . logfile -> [stderr]@%INFO
    . maxinterval -> 5.00 seconds (5s)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-29 04:01:50,229: INFO/MainProcess] beat: Starting...
[2024-06-29 04:01:50,294: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-29 04:01:50,341: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-29 04:01:50,345: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-29 04:01:50,349: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
celery beat v5.3.6 (emerald-rush) is starting.
__    -    ... __   -        _
LocalTime -> 2024-06-29 04:01:50
Configuration ->
    . broker -> redis://localhost:6379/0
    . loader -> celery.loaders.app.AppLoader
    . scheduler -> django_celery_beat.schedulers.DatabaseScheduler

    . logfile -> [stderr]@%INFO
    . maxinterval -> 5.00 seconds (5s)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-06-29 04:17:15,406: INFO/MainProcess] beat: Starting...
[2024-06-29 04:17:15,492: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-29 04:17:15,569: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-29 04:17:15,572: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-29 04:17:15,579: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
celery beat v5.3.6 (emerald-rush) is starting.
__    -    ... __   -        _
LocalTime -> 2024-06-29 04:17:15
Configuration ->
    . broker -> redis://localhost:6379/0
    . loader -> celery.loaders.app.AppLoader
    . scheduler -> django_celery_beat.schedulers.DatabaseScheduler

    . logfile -> [stderr]@%INFO
    . maxinterval -> 5.00 seconds (5s)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-29 12:14:55,523: INFO/MainProcess] beat: Starting...
[2024-06-29 12:14:55,582: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-29 12:14:55,618: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-29 12:14:55,620: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-29 12:14:55,623: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-06-30 02:30:24,695: INFO/MainProcess] beat: Starting...
[2024-06-30 02:30:24,763: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-30 02:30:24,802: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-30 02:30:24,806: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-30 02:30:24,809: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-06-30 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

[2024-06-30 13:35:02,590: INFO/MainProcess] beat: Starting...
[2024-06-30 13:35:02,656: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-30 13:35:02,698: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-30 13:35:02,702: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-30 13:35:02,704: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-30 13:36:30,510: INFO/MainProcess] beat: Starting...
[2024-06-30 13:36:30,578: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-30 13:36:30,625: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-30 13:36:30,628: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-30 13:36:30,633: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-06-30 13:39:13,069: INFO/MainProcess] beat: Starting...
[2024-06-30 13:39:13,133: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-30 13:39:13,171: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-30 13:39:13,175: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-30 13:39:13,178: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-06-30 13:48:18,792: INFO/MainProcess] beat: Starting...
[2024-06-30 13:48:18,848: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-30 13:48:18,893: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-30 13:48:18,896: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-30 13:48:18,898: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-06-30 13:50:10,388: INFO/MainProcess] beat: Starting...
[2024-06-30 13:50:10,450: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-30 13:50:10,500: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-30 13:50:10,503: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-30 13:50:10,506: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-30 13:54:44,567: INFO/MainProcess] beat: Starting...
[2024-06-30 13:54:44,628: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-30 13:54:44,663: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-30 13:54:44,667: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-30 13:54:44,671: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-06-30 13:57:02,131: INFO/MainProcess] beat: Starting...
[2024-06-30 13:57:02,196: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-30 13:57:02,241: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-30 13:57:02,245: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-30 13:57:02,248: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-30 14:00:34,280: INFO/MainProcess] beat: Starting...
[2024-06-30 14:00:34,347: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-30 14:00:34,383: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-30 14:00:34,387: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-30 14:00:34,395: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-06-30 14:01:44,120: INFO/MainProcess] beat: Starting...
[2024-06-30 14:01:44,187: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-06-30 14:01:44,228: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-06-30 14:01:44,233: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-06-30 14:01:44,235: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-06 02:30:25,690: INFO/MainProcess] beat: Starting...
[2024-07-06 02:30:25,752: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-06 02:30:25,802: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-06 02:30:25,809: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-06 02:30:25,812: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-07-06 04:00:00,002: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-22 04:42:28,671: INFO/MainProcess] beat: Starting...
[2024-07-22 04:42:28,760: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-22 04:42:28,825: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-22 04:42:28,831: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-22 04:42:28,833: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-22 04:51:54,891: INFO/MainProcess] beat: Starting...
[2024-07-22 04:51:54,945: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-22 04:51:54,980: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-22 04:51:54,984: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-22 04:51:54,986: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-07-22 04:54:47,127: INFO/MainProcess] beat: Starting...
[2024-07-22 04:54:47,195: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-22 04:54:47,237: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-22 04:54:47,240: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-22 04:54:47,245: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-22 04:56:53,251: INFO/MainProcess] beat: Starting...
[2024-07-22 04:56:53,317: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-22 04:56:53,356: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-22 04:56:53,358: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-22 04:56:53,361: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-22 05:05:46,189: INFO/MainProcess] beat: Starting...
[2024-07-22 05:05:46,248: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-22 05:05:46,295: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-22 05:05:46,298: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-22 05:05:46,300: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-22 05:08:10,728: INFO/MainProcess] beat: Starting...
[2024-07-22 05:08:10,793: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-22 05:08:10,831: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-22 05:08:10,834: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-22 05:08:10,836: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-22 05:46:34,497: INFO/MainProcess] beat: Starting...
[2024-07-22 05:46:34,562: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-22 05:46:34,604: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-22 05:46:34,607: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-22 05:46:34,610: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 03:48:22,740: INFO/MainProcess] beat: Starting...
[2024-07-24 03:48:22,798: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 03:48:22,834: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 03:48:22,837: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 03:48:22,842: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-07-24 04:00:00,000: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-07-24 04:38:34,592: INFO/MainProcess] beat: Starting...
[2024-07-24 04:38:34,661: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 04:38:34,701: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 04:38:34,704: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 04:38:34,707: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-07-24 04:44:19,774: INFO/MainProcess] beat: Starting...
[2024-07-24 04:44:19,843: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 04:44:19,885: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 04:44:19,888: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 04:44:19,890: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 04:51:22,218: INFO/MainProcess] beat: Starting...
[2024-07-24 04:51:22,284: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 04:51:22,321: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 04:51:22,325: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 04:51:22,331: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-07-24 04:54:59,779: INFO/MainProcess] beat: Starting...
[2024-07-24 04:54:59,848: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 04:54:59,887: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 04:54:59,889: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 04:54:59,892: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-07-24 05:07:22,944: INFO/MainProcess] beat: Starting...
[2024-07-24 05:07:23,008: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 05:07:23,047: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 05:07:23,050: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 05:07:23,053: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 05:18:15,048: INFO/MainProcess] beat: Starting...
[2024-07-24 05:18:15,117: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 05:18:15,153: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 05:18:15,156: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 05:18:15,159: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-07-24 05:22:42,649: INFO/MainProcess] beat: Starting...
[2024-07-24 05:22:42,720: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 05:22:42,769: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 05:22:42,772: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 05:22:42,775: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 05:37:10,174: INFO/MainProcess] beat: Starting...
[2024-07-24 05:37:10,240: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 05:37:10,276: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 05:37:10,279: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 05:37:10,282: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 05:48:32,605: INFO/MainProcess] beat: Starting...
[2024-07-24 05:48:32,668: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 05:48:32,710: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 05:48:32,712: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 05:48:32,715: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 07:02:02,311: INFO/MainProcess] beat: Starting...
[2024-07-24 07:02:02,373: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 07:02:02,411: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 07:02:02,413: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 07:02:02,417: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 08:34:21,007: INFO/MainProcess] beat: Starting...
[2024-07-24 08:34:21,076: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 08:34:21,116: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 08:34:21,119: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 08:34:21,124: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 08:46:59,036: INFO/MainProcess] beat: Starting...
[2024-07-24 08:46:59,096: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 08:46:59,137: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 08:46:59,139: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 08:46:59,141: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 09:44:34,511: INFO/MainProcess] beat: Starting...
[2024-07-24 09:44:34,573: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 09:44:34,615: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 09:44:34,620: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 09:44:34,623: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 09:50:20,481: INFO/MainProcess] beat: Starting...
[2024-07-24 09:50:20,535: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 09:50:20,572: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 09:50:20,575: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 09:50:20,577: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 09:59:25,988: INFO/MainProcess] beat: Starting...
[2024-07-24 09:59:26,049: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 09:59:26,088: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 09:59:26,092: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 09:59:26,094: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 10:10:02,099: INFO/MainProcess] beat: Starting...
[2024-07-24 10:10:02,156: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 10:10:02,192: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 10:10:02,194: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 10:10:02,198: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-24 11:41:53,461: INFO/MainProcess] beat: Starting...
[2024-07-24 11:41:53,523: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-24 11:41:53,557: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-24 11:41:53,559: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-24 11:41:53,562: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-26 09:20:06,580: INFO/MainProcess] beat: Starting...
[2024-07-26 09:20:06,639: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-26 09:20:06,703: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-26 09:20:06,706: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-26 09:20:06,712: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-07-26 09:47:05,143: INFO/MainProcess] beat: Starting...
[2024-07-26 09:47:05,209: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-26 09:47:05,249: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-26 09:47:05,252: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-26 09:47:05,255: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-29 03:07:28,689: INFO/MainProcess] beat: Starting...
[2024-07-29 03:07:28,741: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-29 03:07:28,788: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-29 03:07:28,791: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-29 03:07:28,793: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-29 03:08:57,740: INFO/MainProcess] beat: Starting...
[2024-07-29 03:08:57,800: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-29 03:08:57,843: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-29 03:08:57,845: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-29 03:08:57,847: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-29 03:09:45,456: INFO/MainProcess] beat: Starting...
[2024-07-29 03:09:45,519: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-29 03:09:45,560: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-29 03:09:45,563: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-29 03:09:45,565: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-29 03:51:52,048: INFO/MainProcess] beat: Starting...
[2024-07-29 03:51:52,108: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-29 03:51:52,145: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-29 03:51:52,147: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-29 03:51:52,151: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-07-29 03:54:40,033: INFO/MainProcess] beat: Starting...
[2024-07-29 03:54:40,096: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-29 03:54:40,137: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-29 03:54:40,140: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-29 03:54:40,144: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-07-29 04:00:00,000: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-29 04:01:17,324: INFO/MainProcess] beat: Starting...
[2024-07-29 04:01:17,386: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-29 04:01:17,422: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-29 04:01:17,430: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-29 04:01:17,434: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-29 04:23:51,482: INFO/MainProcess] beat: Starting...
[2024-07-29 04:23:51,544: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-29 04:23:51,578: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-29 04:23:51,581: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-29 04:23:51,583: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-29 06:58:22,513: INFO/MainProcess] beat: Starting...
[2024-07-29 06:58:22,571: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-29 06:58:22,615: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-29 06:58:22,618: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-29 06:58:22,621: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-07-29 08:29:12,862: INFO/MainProcess] beat: Starting...
[2024-07-29 08:29:12,917: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-29 08:29:12,959: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-29 08:29:12,962: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-29 08:29:12,970: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-30 03:36:06,784: INFO/MainProcess] beat: Starting...
[2024-07-30 03:36:06,843: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-30 03:36:06,888: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-30 03:36:06,890: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-30 03:36:06,892: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-07-30 04:00:00,004: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-30 04:47:23,735: INFO/MainProcess] beat: Starting...
[2024-07-30 04:47:23,795: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-30 04:47:23,837: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-30 04:47:23,840: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-30 04:47:23,845: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-30 04:52:38,288: INFO/MainProcess] beat: Starting...
[2024-07-30 04:52:38,372: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-30 04:52:38,408: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-30 04:52:38,412: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-30 04:52:38,415: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-30 04:54:38,250: INFO/MainProcess] beat: Starting...
[2024-07-30 04:54:38,317: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-30 04:54:38,359: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-30 04:54:38,363: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-30 04:54:38,367: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-30 04:56:14,036: INFO/MainProcess] beat: Starting...
[2024-07-30 04:56:14,105: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-30 04:56:14,151: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-30 04:56:14,154: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-30 04:56:14,159: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-31 03:33:15,935: INFO/MainProcess] beat: Starting...
[2024-07-31 03:33:15,994: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 03:33:16,039: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 03:33:16,041: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 03:33:16,043: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-31 03:43:38,192: INFO/MainProcess] beat: Starting...
[2024-07-31 03:43:38,261: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 03:43:38,308: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 03:43:38,311: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 03:43:38,316: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-07-31 03:49:57,835: INFO/MainProcess] beat: Starting...
[2024-07-31 03:49:57,902: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 03:49:57,943: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 03:49:57,947: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 03:49:57,951: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-31 03:58:05,606: INFO/MainProcess] beat: Starting...
[2024-07-31 03:58:05,670: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 03:58:05,707: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 03:58:05,710: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 03:58:05,714: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-07-31 04:00:00,002: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-31 04:06:18,939: INFO/MainProcess] beat: Starting...
[2024-07-31 04:06:19,003: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 04:06:19,048: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 04:06:19,057: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 04:06:19,060: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-31 05:56:09,057: INFO/MainProcess] beat: Starting...
[2024-07-31 05:56:09,118: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 05:56:09,157: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 05:56:09,161: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 05:56:09,165: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-07-31 06:54:12,178: INFO/MainProcess] beat: Starting...
[2024-07-31 06:54:12,245: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 06:54:12,282: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 06:54:12,286: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 06:54:12,291: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-31 08:52:28,686: INFO/MainProcess] beat: Starting...
[2024-07-31 08:52:28,754: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 08:52:28,794: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 08:52:28,798: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 08:52:28,800: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-31 09:01:17,577: INFO/MainProcess] beat: Starting...
[2024-07-31 09:01:17,631: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 09:01:17,669: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 09:01:17,672: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 09:01:17,675: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-31 09:05:19,037: INFO/MainProcess] beat: Starting...
[2024-07-31 09:05:19,137: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 09:05:19,183: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 09:05:19,187: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 09:05:19,191: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-31 09:13:36,796: INFO/MainProcess] beat: Starting...
[2024-07-31 09:13:36,864: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 09:13:36,905: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 09:13:36,908: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 09:13:36,910: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-07-31 09:24:02,476: INFO/MainProcess] beat: Starting...
[2024-07-31 09:24:02,545: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 09:24:02,584: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 09:24:02,587: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 09:24:02,589: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-07-31 23:52:53,729: INFO/MainProcess] beat: Starting...
[2024-07-31 23:52:53,784: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-07-31 23:52:53,829: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-07-31 23:52:53,831: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-07-31 23:52:53,835: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-01 02:30:24,600: INFO/MainProcess] beat: Starting...
[2024-08-01 02:30:24,673: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-01 02:30:24,714: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-01 02:30:24,717: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-01 02:30:24,721: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-01 04:00:00,002: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-01 08:20:48,044: INFO/MainProcess] beat: Starting...
[2024-08-01 08:20:48,112: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-01 08:20:48,153: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-01 08:20:48,156: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-01 08:20:48,159: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-01 08:24:54,417: INFO/MainProcess] beat: Starting...
[2024-08-01 08:24:54,474: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-01 08:24:54,511: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-01 08:24:54,513: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-01 08:24:54,516: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-02 05:17:55,432: INFO/MainProcess] beat: Starting...
[2024-08-02 05:17:55,481: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-02 05:17:55,527: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-02 05:17:55,529: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-02 05:17:55,532: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-02 05:29:01,219: INFO/MainProcess] beat: Starting...
[2024-08-02 05:29:01,278: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-02 05:29:01,320: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-02 05:29:01,324: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-02 05:29:01,327: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-02 05:31:57,439: INFO/MainProcess] beat: Starting...
[2024-08-02 05:31:57,503: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-02 05:31:57,540: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-02 05:31:57,547: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-02 05:31:57,550: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-02 05:39:57,990: INFO/MainProcess] beat: Starting...
[2024-08-02 05:39:58,042: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-02 05:39:58,077: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-02 05:39:58,081: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-02 05:39:58,083: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-05 02:30:25,554: INFO/MainProcess] beat: Starting...
[2024-08-05 02:30:25,620: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 02:30:25,671: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 02:30:25,674: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 02:30:25,676: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-05 03:44:42,089: INFO/MainProcess] beat: Starting...
[2024-08-05 03:44:42,155: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 03:44:42,202: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 03:44:42,205: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 03:44:42,207: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-05 03:45:55,944: INFO/MainProcess] beat: Starting...
[2024-08-05 03:45:56,009: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 03:45:56,050: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 03:45:56,054: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 03:45:56,056: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-05 03:46:59,207: INFO/MainProcess] beat: Starting...
[2024-08-05 03:46:59,271: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 03:46:59,307: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 03:46:59,310: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 03:46:59,313: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-05 03:49:10,616: INFO/MainProcess] beat: Starting...
[2024-08-05 03:49:10,679: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 03:49:10,717: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 03:49:10,720: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 03:49:10,722: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-05 04:00:00,000: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-05 04:11:00,287: INFO/MainProcess] beat: Starting...
[2024-08-05 04:11:00,349: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 04:11:00,391: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 04:11:00,395: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 04:11:00,399: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-05 04:20:49,439: INFO/MainProcess] beat: Starting...
[2024-08-05 04:20:49,496: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 04:20:49,538: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 04:20:49,542: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 04:20:49,547: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-05 04:41:32,728: INFO/MainProcess] beat: Starting...
[2024-08-05 04:41:32,791: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 04:41:32,828: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 04:41:32,831: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 04:41:32,834: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-05 06:46:42,723: INFO/MainProcess] beat: Starting...
[2024-08-05 06:46:42,798: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 06:46:42,841: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 06:46:42,848: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 06:46:42,852: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-05 06:53:07,879: INFO/MainProcess] beat: Starting...
[2024-08-05 06:53:07,943: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 06:53:07,983: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 06:53:07,986: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 06:53:07,989: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-05 07:25:54,961: INFO/MainProcess] beat: Starting...
[2024-08-05 07:25:55,023: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 07:25:55,069: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 07:25:55,078: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 07:25:55,084: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-05 08:40:24,247: INFO/MainProcess] beat: Starting...
[2024-08-05 08:40:24,314: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 08:40:24,355: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 08:40:24,359: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 08:40:24,362: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-05 08:48:03,450: INFO/MainProcess] beat: Starting...
[2024-08-05 08:48:03,516: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 08:48:03,560: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 08:48:03,563: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 08:48:03,568: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-05 08:50:14,652: INFO/MainProcess] beat: Starting...
[2024-08-05 08:50:14,721: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 08:50:14,762: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 08:50:14,765: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 08:50:14,769: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-05 08:57:41,943: INFO/MainProcess] beat: Starting...
[2024-08-05 08:57:42,012: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 08:57:42,049: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 08:57:42,056: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 08:57:42,059: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-05 09:06:35,608: INFO/MainProcess] beat: Starting...
[2024-08-05 09:06:35,679: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 09:06:35,721: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 09:06:35,725: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 09:06:35,728: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-05 09:08:33,889: INFO/MainProcess] beat: Starting...
[2024-08-05 09:08:33,955: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 09:08:33,995: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 09:08:33,998: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 09:08:34,000: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-05 09:49:27,433: INFO/MainProcess] beat: Starting...
[2024-08-05 09:49:27,508: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-05 09:49:27,551: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-05 09:49:27,555: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-05 09:49:27,563: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-06 02:57:51,078: INFO/MainProcess] beat: Starting...
[2024-08-06 02:57:51,129: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-06 02:57:51,172: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-06 02:57:51,176: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-06 02:57:51,178: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-06 02:59:33,369: INFO/MainProcess] beat: Starting...
[2024-08-06 02:59:33,426: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-06 02:59:33,457: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-06 02:59:33,459: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-06 02:59:33,461: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-06 03:26:12,927: INFO/MainProcess] beat: Starting...
[2024-08-06 03:26:12,988: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-06 03:26:13,027: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-06 03:26:13,030: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-06 03:26:13,032: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-06 03:32:16,836: INFO/MainProcess] beat: Starting...
[2024-08-06 03:32:16,900: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-06 03:32:16,936: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-06 03:32:16,941: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-06 03:32:16,945: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-06 03:33:53,712: INFO/MainProcess] beat: Starting...
[2024-08-06 03:33:53,777: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-06 03:33:53,820: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-06 03:33:53,823: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-06 03:33:53,826: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-06 04:00:00,002: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-06 04:21:01,189: INFO/MainProcess] beat: Starting...
[2024-08-06 04:21:01,254: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-06 04:21:01,293: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-06 04:21:01,295: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-06 04:21:01,298: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-07 03:49:45,462: INFO/MainProcess] beat: Starting...
[2024-08-07 03:49:45,517: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-07 03:49:45,575: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-07 03:49:45,578: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-07 03:49:45,580: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-07 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-08 03:39:52,656: INFO/MainProcess] beat: Starting...
[2024-08-08 03:39:52,716: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-08 03:39:52,760: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-08 03:39:52,763: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-08 03:39:52,766: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-08 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-08 04:16:47,171: INFO/MainProcess] beat: Starting...
[2024-08-08 04:16:52,227: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-08 04:16:52,237: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-08 04:16:52,256: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-08 04:16:52,260: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-08 04:28:22,561: INFO/MainProcess] beat: Starting...
[2024-08-08 04:28:22,631: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-08 04:28:22,651: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-08 04:28:22,688: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-08 04:28:22,698: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-08 04:28:22,700: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-08 04:28:22,710: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-08 04:28:22,715: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-09 03:02:53,302: INFO/MainProcess] beat: Starting...
[2024-08-09 03:02:53,358: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-09 03:02:53,415: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-09 03:02:53,418: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-09 03:02:53,421: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-09 03:42:26,226: INFO/MainProcess] beat: Starting...
[2024-08-09 03:42:31,274: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-09 03:42:31,287: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-09 03:42:31,305: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-09 03:42:31,308: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-09 04:00:00,000: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-09 04:53:45,638: INFO/MainProcess] beat: Starting...
[2024-08-09 04:53:50,691: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-09 04:53:50,710: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-09 04:53:50,728: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-09 04:53:50,735: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-12 03:16:01,159: INFO/MainProcess] beat: Starting...
[2024-08-12 03:16:01,215: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-12 03:16:01,262: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-12 03:16:01,265: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-12 03:16:01,268: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-12 03:16:58,596: INFO/MainProcess] beat: Starting...
[2024-08-12 03:16:58,663: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-12 03:16:58,698: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-12 03:16:58,701: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-12 03:16:58,704: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-12 04:00:00,000: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-12 04:22:18,654: INFO/MainProcess] beat: Starting...
[2024-08-12 04:22:23,708: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-12 04:22:23,724: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-12 04:22:23,749: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-12 04:22:23,752: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-13 03:31:21,812: INFO/MainProcess] beat: Starting...
[2024-08-13 03:31:21,883: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-13 03:31:21,934: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-13 03:31:21,939: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-13 03:31:21,943: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-13 04:00:00,003: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-14 03:20:31,541: INFO/MainProcess] beat: Starting...
[2024-08-14 03:20:31,596: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-14 03:20:31,642: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-14 03:20:31,645: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-14 03:20:31,647: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-14 04:00:00,000: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-14 04:37:04,553: INFO/MainProcess] beat: Starting...
[2024-08-14 04:37:04,620: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-14 04:37:04,657: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-14 04:37:04,662: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-14 04:37:04,665: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-14 04:43:56,621: INFO/MainProcess] beat: Starting...
[2024-08-14 04:44:01,676: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-14 04:44:01,695: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-14 04:44:01,717: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-14 04:44:01,725: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-14 07:18:26,558: INFO/MainProcess] beat: Starting...
[2024-08-14 07:18:31,616: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-14 07:18:31,632: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-14 07:18:31,656: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-14 07:18:31,660: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-15 19:24:10,379: INFO/MainProcess] beat: Starting...
[2024-08-15 19:24:10,435: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-15 19:24:10,475: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-15 19:24:10,479: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-15 19:24:10,482: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-16 03:23:06,642: INFO/MainProcess] beat: Starting...
[2024-08-16 03:23:06,702: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-16 03:23:06,745: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-16 03:23:06,748: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-16 03:23:06,750: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-16 04:00:00,002: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-20 06:25:30,176: INFO/MainProcess] beat: Starting...
[2024-08-20 06:25:30,235: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-20 06:25:30,289: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-20 06:25:30,293: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-20 06:25:30,295: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-20 07:17:39,400: INFO/MainProcess] beat: Starting...
[2024-08-20 07:17:39,461: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-20 07:17:39,501: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-20 07:17:39,505: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-20 07:17:39,508: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-20 07:44:11,003: INFO/MainProcess] beat: Starting...
[2024-08-20 07:44:16,068: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-20 07:44:16,079: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-20 07:44:16,101: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-20 07:44:16,105: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-20 07:50:18,840: INFO/MainProcess] beat: Starting...
[2024-08-20 07:50:23,891: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-20 07:50:23,904: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-20 07:50:23,924: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-20 07:50:23,928: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-20 07:51:18,739: INFO/MainProcess] beat: Starting...
[2024-08-20 07:51:18,802: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-20 07:51:18,820: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-20 07:51:18,861: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-20 07:51:18,869: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-20 07:51:18,876: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-20 07:51:18,883: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-20 07:51:18,885: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-20 07:51:18,888: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-20 07:51:18,892: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-20 07:54:27,989: INFO/MainProcess] beat: Starting...
[2024-08-20 07:54:33,047: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-20 07:54:33,061: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-20 07:54:33,080: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-20 07:54:33,087: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-20 08:01:26,803: INFO/MainProcess] beat: Starting...
[2024-08-20 08:01:31,855: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-08-20 08:01:31,867: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-20 08:01:31,890: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-20 08:01:31,895: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-21 09:03:53,412: INFO/MainProcess] beat: Starting...
[2024-08-21 09:03:53,457: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-21 09:03:53,495: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-21 09:03:53,498: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-21 09:03:53,500: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-21 09:11:01,560: INFO/MainProcess] beat: Starting...
[2024-08-21 09:11:01,628: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-21 09:11:01,664: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-21 09:11:01,668: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-21 09:11:01,671: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-22 03:13:33,157: INFO/MainProcess] beat: Starting...
[2024-08-22 03:13:33,209: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-22 03:13:33,255: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-22 03:13:33,259: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-22 03:13:33,263: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-22 04:00:00,002: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-22 06:27:24,757: INFO/MainProcess] beat: Starting...
[2024-08-22 06:27:24,814: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-22 06:27:24,844: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-22 06:27:24,847: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-22 06:27:24,850: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-22 08:47:51,006: INFO/MainProcess] beat: Starting...
[2024-08-22 08:47:51,060: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-22 08:47:51,098: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-22 08:47:51,101: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-22 08:47:51,104: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-22 08:54:10,916: INFO/MainProcess] beat: Starting...
[2024-08-22 08:54:10,974: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-22 08:54:11,014: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-22 08:54:11,019: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-22 08:54:11,023: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-22 09:55:35,253: INFO/MainProcess] beat: Starting...
[2024-08-22 09:55:35,312: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-22 09:55:35,345: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-22 09:55:35,350: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-22 09:55:35,354: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-23 03:03:23,522: INFO/MainProcess] beat: Starting...
[2024-08-23 03:03:23,581: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-23 03:03:23,623: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-23 03:03:23,626: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-23 03:03:23,629: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-23 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

[2024-08-23 04:45:21,035: INFO/MainProcess] beat: Starting...
[2024-08-23 04:45:21,105: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-23 04:45:21,144: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-23 04:45:21,147: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-23 04:45:21,150: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-23 05:12:39,940: INFO/MainProcess] beat: Starting...
[2024-08-23 05:12:40,006: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-23 05:12:40,044: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-23 05:12:40,050: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-23 05:12:40,055: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-26 03:33:07,448: INFO/MainProcess] beat: Starting...
[2024-08-26 03:33:07,508: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-26 03:33:07,551: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-26 03:33:07,554: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-26 03:33:07,557: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-08-26 04:00:00,003: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-08-26 04:36:03,653: INFO/MainProcess] beat: Starting...
[2024-08-26 04:36:03,717: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-08-26 04:36:03,757: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-08-26 04:36:03,761: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-08-26 04:36:03,764: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-06 02:05:51,694: INFO/MainProcess] beat: Starting...
[2024-09-06 02:05:51,751: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-06 02:05:51,799: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-06 02:05:51,804: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-06 02:05:51,807: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-06 02:30:24,927: INFO/MainProcess] beat: Starting...
[2024-09-06 02:30:24,983: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-06 02:30:25,019: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-06 02:30:25,022: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-06 02:30:25,024: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-06 03:43:26,137: INFO/MainProcess] beat: Starting...
[2024-09-06 03:43:26,200: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-06 03:43:26,236: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-06 03:43:26,240: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-06 03:43:26,245: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-06 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-06 04:03:28,651: INFO/MainProcess] beat: Starting...
[2024-09-06 04:03:33,708: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-09-06 04:03:33,718: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-06 04:03:33,738: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-06 04:03:33,744: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-09 03:33:48,637: INFO/MainProcess] beat: Starting...
[2024-09-09 03:33:48,694: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-09 03:33:48,751: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-09 03:33:48,754: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-09 03:33:48,757: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-09 04:00:00,000: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
celery beat v5.3.6 (emerald-rush) is starting.
__    -    ... __   -        _
LocalTime -> 2024-09-09 03:33:48
Configuration ->
    . broker -> redis://localhost:6379/0
    . loader -> celery.loaders.app.AppLoader
    . scheduler -> django_celery_beat.schedulers.DatabaseScheduler

    . logfile -> [stderr]@%INFO
    . maxinterval -> 5.00 seconds (5s)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-09 06:20:29,611: INFO/MainProcess] beat: Starting...
[2024-09-09 06:20:29,672: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-09 06:20:29,708: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-09 06:20:29,713: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-09 06:20:29,717: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-09 11:45:03,730: INFO/MainProcess] beat: Starting...
[2024-09-09 11:45:03,794: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-09 11:45:03,848: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-09 11:45:03,852: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-09 11:45:03,856: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-10 03:21:08,728: INFO/MainProcess] beat: Starting...
[2024-09-10 03:21:08,784: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-10 03:21:08,826: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-10 03:21:08,828: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-10 03:21:08,832: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-10 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-10 07:42:38,044: INFO/MainProcess] beat: Starting...
[2024-09-10 07:42:38,096: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-10 07:42:38,141: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-10 07:42:38,146: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-10 07:42:38,150: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-10 07:58:37,177: INFO/MainProcess] beat: Starting...
[2024-09-10 07:58:37,237: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-10 07:58:37,285: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-10 07:58:37,289: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-10 07:58:37,296: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-10 08:42:15,666: INFO/MainProcess] beat: Starting...
[2024-09-10 08:42:15,725: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-10 08:42:15,765: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-10 08:42:15,768: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-10 08:42:15,775: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-10 08:51:44,599: INFO/MainProcess] beat: Starting...
[2024-09-10 08:51:44,664: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-10 08:51:44,700: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-10 08:51:44,703: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-10 08:51:44,705: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-10 08:52:27,703: INFO/MainProcess] beat: Starting...
[2024-09-10 08:52:32,765: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-09-10 08:52:32,780: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-10 08:52:32,806: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-10 08:52:32,812: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-10 10:01:23,246: INFO/MainProcess] beat: Starting...
[2024-09-10 10:01:23,314: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-10 10:01:23,347: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-10 10:01:23,351: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-10 10:01:23,354: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-11 03:26:21,430: INFO/MainProcess] beat: Starting...
[2024-09-11 03:26:21,490: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-11 03:26:21,531: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-11 03:26:21,533: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-11 03:26:21,538: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-11 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-12 03:24:57,205: INFO/MainProcess] beat: Starting...
[2024-09-12 03:24:57,261: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-12 03:24:57,315: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-12 03:24:57,318: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-12 03:24:57,322: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-12 03:28:56,495: INFO/MainProcess] beat: Starting...
[2024-09-12 03:28:56,549: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-12 03:28:56,586: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-12 03:28:56,589: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-12 03:28:56,591: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-12 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-13 03:13:55,128: INFO/MainProcess] beat: Starting...
[2024-09-13 03:13:55,182: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-13 03:13:55,224: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-13 03:13:55,227: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-13 03:13:55,237: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-13 03:50:03,698: INFO/MainProcess] beat: Starting...
[2024-09-13 03:50:03,753: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-13 03:50:03,787: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-13 03:50:03,790: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-13 03:50:03,792: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-13 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-13 04:23:13,904: INFO/MainProcess] beat: Starting...
[2024-09-13 04:23:13,978: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-13 04:23:14,011: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-13 04:23:14,014: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-13 04:23:14,017: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-13 05:31:46,856: INFO/MainProcess] beat: Starting...
[2024-09-13 05:31:46,909: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-13 05:31:46,939: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-13 05:31:46,941: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-13 05:31:46,945: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-13 05:33:26,604: INFO/MainProcess] beat: Starting...
[2024-09-13 05:33:31,654: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-09-13 05:33:31,667: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-13 05:33:31,691: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-13 05:33:31,694: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-15 02:30:25,767: INFO/MainProcess] beat: Starting...
[2024-09-15 02:30:25,832: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-15 02:30:25,887: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-15 02:30:25,893: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-15 02:30:25,898: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-15 04:00:00,002: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-15 10:19:11,871: INFO/MainProcess] beat: Starting...
[2024-09-15 10:19:11,928: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-15 10:19:11,963: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-15 10:19:11,966: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-15 10:19:11,968: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-15 10:21:37,609: INFO/MainProcess] beat: Starting...
[2024-09-15 10:21:37,663: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-15 10:21:37,695: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-15 10:21:37,698: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-16 02:30:24,995: INFO/MainProcess] beat: Starting...
[2024-09-16 02:30:25,050: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-16 02:30:25,086: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-16 02:30:25,089: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-16 02:30:25,092: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-16 03:03:28,855: INFO/MainProcess] beat: Starting...
[2024-09-16 03:03:28,910: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-16 03:03:28,943: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-16 03:03:28,946: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-16 03:03:28,948: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-16 04:00:00,003: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-16 04:12:17,808: INFO/MainProcess] beat: Starting...
[2024-09-16 04:12:22,857: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-09-16 04:12:22,869: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-16 04:12:22,888: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-16 04:12:22,890: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-16 04:15:53,807: INFO/MainProcess] beat: Starting...
[2024-09-16 04:15:58,857: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-09-16 04:15:58,870: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-16 04:15:58,895: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-16 04:15:58,899: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-16 04:17:05,060: INFO/MainProcess] beat: Starting...
[2024-09-16 04:17:10,114: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-09-16 04:17:10,125: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-16 04:17:10,146: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-16 04:17:10,153: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-16 04:18:35,684: INFO/MainProcess] beat: Starting...
[2024-09-16 04:18:40,734: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-09-16 04:18:40,745: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-16 04:18:40,765: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-16 04:18:40,769: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-16 04:24:08,461: INFO/MainProcess] beat: Starting...
[2024-09-16 04:24:13,512: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-09-16 04:24:13,523: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-16 04:24:13,542: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-16 04:24:13,551: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-16 04:33:28,943: INFO/MainProcess] beat: Starting...
[2024-09-16 04:33:34,002: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-09-16 04:33:34,014: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-16 04:33:34,036: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-16 04:33:34,042: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-16 04:36:28,584: INFO/MainProcess] beat: Starting...
[2024-09-16 04:36:33,639: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-09-16 04:36:33,649: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-16 04:36:33,667: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-16 04:36:33,672: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
celery beat v5.3.6 (emerald-rush) is starting.
__    -    ... __   -        _
LocalTime -> 2024-09-16 04:36:28
Configuration ->
    . broker -> redis://localhost:6379/0
    . loader -> celery.loaders.app.AppLoader
    . scheduler -> django_celery_beat.schedulers.DatabaseScheduler

    . logfile -> [stderr]@%INFO
    . maxinterval -> 5.00 seconds (5s)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-16 04:52:35,768: INFO/MainProcess] beat: Starting...
[2024-09-16 04:52:35,821: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-16 04:52:35,857: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-16 04:52:35,859: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-16 04:52:35,862: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-17 03:45:30,941: INFO/MainProcess] beat: Starting...
[2024-09-17 03:45:31,003: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-17 03:45:31,053: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-17 03:45:31,056: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-17 03:45:31,059: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-17 03:59:10,773: INFO/MainProcess] beat: Starting...
[2024-09-17 03:59:15,836: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-09-17 03:59:15,853: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-17 03:59:15,882: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-17 03:59:15,889: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-17 04:00:00,002: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-17 04:09:22,598: INFO/MainProcess] beat: Starting...
[2024-09-17 04:09:27,648: INFO/MainProcess] DatabaseScheduler: Schedule changed.
[2024-09-17 04:09:27,660: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-17 04:09:27,682: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-17 04:09:27,686: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-17 04:27:51,854: INFO/MainProcess] beat: Starting...
[2024-09-17 04:27:51,914: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-17 04:27:51,951: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-17 04:27:51,955: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-17 04:27:51,958: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-17 04:30:55,641: INFO/MainProcess] beat: Starting...
[2024-09-17 04:30:55,696: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-17 04:30:55,727: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-17 04:30:55,729: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-17 04:30:55,732: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-17 07:28:52,725: INFO/MainProcess] beat: Starting...
[2024-09-17 07:28:52,779: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-17 07:28:52,814: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-17 07:28:52,817: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-17 07:28:52,819: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-17 07:32:14,786: INFO/MainProcess] beat: Starting...
[2024-09-17 07:32:14,841: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-17 07:32:14,882: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-17 07:32:14,886: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-17 07:32:14,889: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-22 19:51:36,559: INFO/MainProcess] beat: Starting...
[2024-09-22 19:51:36,611: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-22 19:51:36,654: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-22 19:51:36,656: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-22 19:51:36,658: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-22 20:18:52,655: INFO/MainProcess] beat: Starting...
[2024-09-22 20:18:52,706: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-22 20:18:52,743: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-22 20:18:52,746: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-22 20:18:52,749: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-22 20:27:49,038: INFO/MainProcess] beat: Starting...
[2024-09-22 20:27:49,098: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-22 20:27:49,134: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-22 20:27:49,138: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-22 20:27:49,141: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-22 20:28:24,610: INFO/MainProcess] beat: Starting...
[2024-09-22 20:28:24,662: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-22 20:28:24,697: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-22 20:28:24,700: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-22 20:28:24,703: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-22 20:29:10,581: INFO/MainProcess] beat: Starting...
[2024-09-22 20:29:10,642: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-22 20:29:10,677: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-22 20:29:10,681: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-22 20:29:10,683: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-22 20:35:49,456: INFO/MainProcess] beat: Starting...
[2024-09-22 20:35:49,499: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-22 20:35:49,529: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-22 20:35:49,533: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-22 20:35:49,535: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-22 20:36:28,246: INFO/MainProcess] beat: Starting...
[2024-09-22 20:36:28,304: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-22 20:36:28,335: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-22 20:36:28,338: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-22 20:36:28,342: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-23 12:13:14,296: INFO/MainProcess] beat: Starting...
[2024-09-23 12:13:14,350: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-23 12:13:14,406: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-23 12:13:14,409: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-23 12:13:14,412: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

[2024-09-25 03:40:25,392: INFO/MainProcess] beat: Starting...
[2024-09-25 03:40:25,449: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-25 03:40:25,503: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-25 03:40:25,507: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-25 03:40:25,510: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-25 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-26 03:40:24,738: INFO/MainProcess] beat: Starting...
[2024-09-26 03:40:24,796: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-26 03:40:24,854: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-26 03:40:24,860: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-26 03:40:24,864: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-26 04:00:00,003: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-27 03:40:24,708: INFO/MainProcess] beat: Starting...
[2024-09-27 03:40:24,776: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-27 03:40:24,820: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-27 03:40:24,823: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-27 03:40:24,826: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-27 04:00:00,001: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
DEBUG:celery.utils.functional:
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def execute_trades():
    return 1

DEBUG:celery.utils.functional:
def update_kite_ticks():
    return 1

DEBUG:celery.utils.functional:
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG:celery.utils.functional:
def login_into_telegram():
    return 1

DEBUG:celery.utils.functional:
def xmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chain(*args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def backend_cleanup():
    return 1

DEBUG:celery.utils.functional:
def process_telegram_messages():
    return 1

DEBUG:celery.utils.functional:
def parse_and_filter_trades():
    return 1

DEBUG:celery.utils.functional:
def xstarmap(task, it):
    return 1

DEBUG:celery.utils.functional:
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def accumulate(self, *args, **kwargs):
    return 1

DEBUG:celery.utils.functional:
def chunks(task, it, n):
    return 1

[2024-09-28 03:40:24,667: INFO/MainProcess] beat: Starting...
[2024-09-28 03:40:24,721: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
[2024-09-28 03:40:24,775: INFO/MainProcess] Scheduler: Sending due task schedule4 (trading.tasks.update_kite_ticks)
[2024-09-28 03:40:24,779: INFO/MainProcess] Scheduler: Sending due task schedule3 (trading.tasks.execute_trades)
[2024-09-28 03:40:24,781: INFO/MainProcess] Scheduler: Sending due task schedule (trading.tasks.process_telegram_messages)
[2024-09-28 04:00:00,002: INFO/MainProcess] Scheduler: Sending due task celery.backend_cleanup (celery.backend_cleanup)
